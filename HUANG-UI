local hookmetamethod = hookmetamethod or (getrawmetatable and hookfunction)
local getrawmetamethod = getrawmetamethod or getrawmetatable
local newcclosure = newcclosure or function(f) return f end

local mt = getrawmetamethod(game)
local oldNamecall = mt.__namecall
local oldIndex = mt.__index
local oldNewindex = mt.__newindex

setreadonly(mt, false)
mt.__namecall = newcclosure(function(self, ...)
    local method = getnamecallmethod()
    local args = {...}
    
    if method == "FireServer" and (args[1] == "kick" or args[1] == "ban" or string.find(tostring(args[1]), "anti")) then
        return
    end
    
    if method == "FindFirstChild" and self == game.CoreGui and (args[1] == "HuangUI" or string.find(args[1] or "", "HuangUI")) then
        return nil
    end
    
    return oldNamecall(self, ...)
end)

mt.__index = newcclosure(function(self, key)
    if self:IsA("Humanoid") and (key == "WalkSpeed" or key == "JumpPower") then
        return oldIndex(self, key)
    end
    return oldIndex(self, key)
end)

mt.__newindex = newcclosure(function(self, key, value)
    if self:IsA("Humanoid") and (key == "WalkSpeed" or key == "JumpPower") then
        oldNewindex(self, key, value)
        return
    end
    oldNewindex(self, key, value)
end)
setreadonly(mt, true)

local oldPrint = print
print = function(...)
    local args = {...}
    if string.find(table.concat(args, " "), "exploit") or string.find(table.concat(args, " "), "hook") or string.find(table.concat(args, " "), "HuangUI") then
        return
    end
    oldPrint(...)
end

local oldWarn = warn
warn = function(...) return end

_G.gcinfo = function() return 0 end

local HuangUI = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local Themes = {
    Dark = {Background = Color3.fromRGB(20, 20, 25), Accent = Color3.fromRGB(50, 50, 60), Text = Color3.fromRGB(255, 255, 255), Secondary = Color3.fromRGB(30, 30, 35)},
    Light = {Background = Color3.fromRGB(240, 240, 245), Accent = Color3.fromRGB(200, 200, 210), Text = Color3.fromRGB(0, 0, 0), Secondary = Color3.fromRGB(255, 255, 255)}
}
local CurrentTheme = Themes.Dark
local ScreenGui = nil

local TweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
local FadeInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quint, Enum.EasingDirection.InOut)

function HuangUI:CreateWindow(options)
    local window = {}
    options = options or {}
    local title = options.Title or "黄某UI"
    local size = options.Size or UDim2.new(0, 500, 0, 400)
    local theme = options.Theme or "Dark"

    CurrentTheme = Themes[theme] or Themes.Dark

    ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "HuangUI"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Parent = ScreenGui
    MainFrame.BackgroundColor3 = CurrentTheme.Background
    MainFrame.BorderSizePixel = 0
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -200)
    MainFrame.Size = size
    MainFrame.Active = true
    MainFrame.Draggable = true

    MainFrame.BackgroundTransparency = 1
    TweenService:Create(MainFrame, TweenInfo, {BackgroundTransparency = 0}):Play()

    local TitleBar = Instance.new("Frame")
    TitleBar.Name = "TitleBar"
    TitleBar.Parent = MainFrame
    TitleBar.BackgroundColor3 = CurrentTheme.Accent
    TitleBar.BorderSizePixel = 0
    TitleBar.Size = UDim2.new(1, 0, 0, 30)

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "TitleLabel"
    TitleLabel.Parent = TitleBar
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.Size = UDim2.new(1, -80, 1, 0)
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.Text = title
    TitleLabel.TextColor3 = CurrentTheme.Text
    TitleLabel.TextSize = 16
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "Minimize"
    MinimizeButton.Parent = TitleBar
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Position = UDim2.new(1, -40, 0, 5)
    MinimizeButton.Size = UDim2.new(0, 20, 0, 20)
    MinimizeButton.Font = Enum.Font.SourceSansBold
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = CurrentTheme.Text
    MinimizeButton.TextSize = 14

    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "Close"
    CloseButton.Parent = TitleBar
    CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    CloseButton.BorderSizePixel = 0
    CloseButton.Position = UDim2.new(1, -20, 0, 5)
    CloseButton.Size = UDim2.new(0, 20, 0, 20)
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.Text = "×"
    CloseButton.TextColor3 = CurrentTheme.Text
    CloseButton.TextSize = 14

    local ContentFrame = Instance.new("Frame")
    ContentFrame.Name = "ContentFrame"
    ContentFrame.Parent = MainFrame
    ContentFrame.BackgroundTransparency = 1
    ContentFrame.Position = UDim2.new(0, 0, 0, 30)
    ContentFrame.Size = UDim2.new(1, 0, 1, -30)
    ContentFrame.ClipsDescendants = true

    local TabFrame = Instance.new("Frame")
    TabFrame.Name = "TabFrame"
    TabFrame.Parent = ContentFrame
    TabFrame.BackgroundTransparency = 1
    TabFrame.Size = UDim2.new(0, 150, 1, 0)

    local TabContent = Instance.new("Frame")
    TabContent.Name = "TabContent"
    TabContent.Parent = ContentFrame
    TabContent.BackgroundTransparency = 1
    TabContent.Position = UDim2.new(0, 150, 0, 0)
    TabContent.Size = UDim2.new(1, -150, 1, 0)

    local tabs = {}
    local currentTab = nil
    local isMinimized = false

    MinimizeButton.MouseButton1Click:Connect(function()
        if isMinimized then
            TweenService:Create(MainFrame, TweenInfo, {Size = size}):Play()
            ContentFrame.Visible = true
            isMinimized = false
            MinimizeButton.Text = "-"
        else
            TweenService:Create(MainFrame, TweenInfo, {Size = UDim2.new(0, 500, 0, 30)}):Play()
            ContentFrame.Visible = false
            isMinimized = true
            MinimizeButton.Text = "+"
        end
    end)

    CloseButton.MouseButton1Click:Connect(function()
        local fadeTween = TweenService:Create(MainFrame, FadeInfo, {BackgroundTransparency = 1})
        fadeTween:Play()
        fadeTween.Completed:Connect(function()
            ScreenGui:Destroy()
        end)
        TweenService:Create(TitleBar, FadeInfo, {BackgroundTransparency = 1}):Play()
    end)

    local function addHover(button, hoverColor)
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = hoverColor}):Play()
        end)
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {BackgroundColor3 = button.BackgroundColor3}):Play()
        end)
    end

    addHover(MinimizeButton, Color3.fromRGB(150, 150, 150))
    addHover(CloseButton, Color3.fromRGB(255, 80, 80))

    function window:AddTab(options)
        local tab = {}
        options = options or {}
        local tabName = options.Title or "Tab"
        local icon = options.Icon or ""

        local TabButton = Instance.new("TextButton")
        TabButton.Name = tabName
        TabButton.Parent = TabFrame
        TabButton.BackgroundColor3 = CurrentTheme.Secondary
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(1, 0, 0, 40)
        TabButton.Font = Enum.Font.SourceSans
        TabButton.Text = tabName
        TabButton.TextColor3 = CurrentTheme.Text
        TabButton.TextSize = 14
        TabButton.BackgroundTransparency = 1

        if icon ~= "" then
            TabButton.Text = icon .. " " .. tabName
        end

        addHover(TabButton, CurrentTheme.Accent)

        local TabContentFrame = Instance.new("ScrollingFrame")
        TabContentFrame.Name = tabName .. "Content"
        TabContentFrame.Parent = TabContent
        TabContentFrame.BackgroundTransparency = 1
        TabContentFrame.BorderSizePixel = 0
        TabContentFrame.Position = UDim2.new(0, 0, 0, 0)
        TabContentFrame.Size = UDim2.new(1, 0, 1, 0)
        TabContentFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContentFrame.ScrollBarThickness = 6
        TabContentFrame.Visible = false
        TabContentFrame.BackgroundTransparency = 1

        local sectionY = 0

        TabButton.MouseButton1Click:Connect(function()
            for _, t in pairs(tabs) do
                TweenService:Create(t.Button, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
                TweenService:Create(t.Content, FadeInfo, {BackgroundTransparency = 1}):Play()
                t.Content.Visible = false
            end
            TabContentFrame.Visible = true
            TweenService:Create(TabButton, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
            TweenService:Create(TabContentFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
            currentTab = TabContentFrame
        end)

        if #tabs == 0 then
            TabContentFrame.Visible = true
            TabButton.BackgroundTransparency = 0
            currentTab = TabContentFrame
        end

        table.insert(tabs, {Button = TabButton, Content = TabContentFrame})

        TabFrame.CanvasSize = UDim2.new(0, 0, 0, #tabs * 40)

        function tab:AddSection(options)
            local section = {}
            options = options or {}
            local sectionTitle = options.Title or "Section"

            local SectionFrame = Instance.new("Frame")
            SectionFrame.Name = sectionTitle
            SectionFrame.Parent = TabContentFrame
            SectionFrame.BackgroundColor3 = CurrentTheme.Accent
            SectionFrame.BorderSizePixel = 0
            SectionFrame.Size = UDim2.new(1, -20, 0, 30)
            SectionFrame.Position = UDim2.new(0, 10, 0, sectionY)
            SectionFrame.BackgroundTransparency = 1

            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Name = "Title"
            SectionLabel.Parent = SectionFrame
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Size = UDim2.new(1, 0, 1, 0)
            SectionLabel.Font = Enum.Font.SourceSansBold
            SectionLabel.Text = sectionTitle
            SectionLabel.TextColor3 = CurrentTheme.Text
            SectionLabel.TextSize = 14
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            SectionLabel.TextTransparency = 1

            TweenService:Create(SectionFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
            TweenService:Create(SectionLabel, TweenInfo, {TextTransparency = 0}):Play()

            sectionY = sectionY + 40

            TabContentFrame.CanvasSize = UDim2.new(0, 0, 0, sectionY)

            local elementY = 10

            function section:AddButton(options)
                options = options or {}
                local buttonText = options.Title or "Button"
                local callback = options.Callback or function() end

                local Button = Instance.new("TextButton")
                Button.Name = "Button"
                Button.Parent = TabContentFrame
                Button.BackgroundColor3 = CurrentTheme.Secondary
                Button.BorderSizePixel = 0
                Button.Size = UDim2.new(1, -20, 0, 30)
                Button.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                Button.Font = Enum.Font.SourceSans
                Button.Text = buttonText
                Button.TextColor3 = CurrentTheme.Text
                Button.TextSize = 14
                Button.BackgroundTransparency = 1

                TweenService:Create(Button, TweenInfo, {BackgroundTransparency = 0}):Play()

                addHover(Button, CurrentTheme.Accent)

                Button.MouseButton1Click:Connect(function()
                    TweenService:Create(Button, TweenInfo.new(0.1, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {Size = UDim2.new(1, -20, 0, 28)}):Play()
                    wait(0.1)
                    TweenService:Create(Button, TweenInfo.new(0.1), {Size = UDim2.new(1, -20, 0, 30)}):Play()
                    callback()
                end)

                elementY = elementY + 40

                return Button
            end

            function section:AddToggle(options)
                options = options or {}
                local toggleText = options.Title or "Toggle"
                local default = options.Default or false
                local callback = options.Callback or function() end

                local ToggleFrame = Instance.new("Frame")
                ToggleFrame.Name = "Toggle"
                ToggleFrame.Parent = TabContentFrame
                ToggleFrame.BackgroundColor3 = CurrentTheme.Secondary
                ToggleFrame.BorderSizePixel = 0
                ToggleFrame.Size = UDim2.new(1, -20, 0, 30)
                ToggleFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                ToggleFrame.BackgroundTransparency = 1

                local ToggleLabel = Instance.new("TextLabel")
                ToggleLabel.Name = "Label"
                ToggleLabel.Parent = ToggleFrame
                ToggleLabel.BackgroundTransparency = 1
                ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
                ToggleLabel.Size = UDim2.new(1, -100, 1, 0)
                ToggleLabel.Font = Enum.Font.SourceSans
                ToggleLabel.Text = toggleText
                ToggleLabel.TextColor3 = CurrentTheme.Text
                ToggleLabel.TextSize = 14
                ToggleLabel.TextXAlignment = Enum.TextXAlignment.Left
                ToggleLabel.TextTransparency = 1

                local ToggleButton = Instance.new("TextButton")
                ToggleButton.Name = "ToggleButton"
                ToggleButton.Parent = ToggleFrame
                ToggleButton.BackgroundColor3 = default and CurrentTheme.Accent or Color3.fromRGB(100, 100, 100)
                ToggleButton.BorderSizePixel = 0
                ToggleButton.Position = UDim2.new(1, -30, 0.5, -10)
                ToggleButton.Size = UDim2.new(0, 20, 0, 20)
                ToggleButton.Font = Enum.Font.SourceSansBold
                ToggleButton.Text = ""
                ToggleButton.TextColor3 = CurrentTheme.Text
                ToggleButton.BackgroundTransparency = 1

                TweenService:Create(ToggleFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(ToggleLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(ToggleButton, TweenInfo, {BackgroundTransparency = 0}):Play()

                local state = default
                ToggleButton.MouseButton1Click:Connect(function()
                    state = not state
                    TweenService:Create(ToggleButton, TweenInfo.new(0.2), {BackgroundColor3 = state and CurrentTheme.Accent or Color3.fromRGB(100, 100, 100), Size = UDim2.new(0, 18, 0, 18)}):Play()
                    wait(0.1)
                    TweenService:Create(ToggleButton, TweenInfo.new(0.1), {Size = UDim2.new(0, 20, 0, 20)}):Play()
                    callback(state)
                end)

                elementY = elementY + 40

                return {Toggle = ToggleButton, Set = function(value) state = value; ToggleButton.BackgroundColor3 = value and CurrentTheme.Accent or Color3.fromRGB(100, 100, 100); callback(value) end}
            end

            function section:AddSlider(options)
                options = options or {}
                local sliderText = options.Title or "Slider"
                local min = options.Min or 0
                local max = options.Max or 100
                local default = options.Default or 50
                local callback = options.Callback or function() end

                local SliderFrame = Instance.new("Frame")
                SliderFrame.Name = "Slider"
                SliderFrame.Parent = TabContentFrame
                SliderFrame.BackgroundColor3 = CurrentTheme.Secondary
                SliderFrame.BorderSizePixel = 0
                SliderFrame.Size = UDim2.new(1, -20, 0, 50)
                SliderFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                SliderFrame.BackgroundTransparency = 1

                local SliderLabel = Instance.new("TextLabel")
                SliderLabel.Name = "Label"
                SliderLabel.Parent = SliderFrame
                SliderLabel.BackgroundTransparency = 1
                SliderLabel.Position = UDim2.new(0, 0, 0, 0)
                SliderLabel.Size = UDim2.new(1, 0, 0, 20)
                SliderLabel.Font = Enum.Font.SourceSans
                SliderLabel.Text = sliderText .. ": " .. default
                SliderLabel.TextColor3 = CurrentTheme.Text
                SliderLabel.TextSize = 14
                SliderLabel.TextXAlignment = Enum.TextXAlignment.Left
                SliderLabel.TextTransparency = 1

                local SliderBar = Instance.new("Frame")
                SliderBar.Name = "Bar"
                SliderBar.Parent = SliderFrame
                SliderBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
                SliderBar.BorderSizePixel = 0
                SliderBar.Position = UDim2.new(0, 0, 0, 30)
                SliderBar.Size = UDim2.new(1, 0, 0, 10)
                SliderBar.BackgroundTransparency = 1

                local SliderFill = Instance.new("Frame")
                SliderFill.Name = "Fill"
                SliderFill.Parent = SliderBar
                SliderFill.BackgroundColor3 = CurrentTheme.Accent
                SliderFill.BorderSizePixel = 0
                SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
                SliderFill.Position = UDim2.new(0, 0, 0, 0)
                SliderFill.BackgroundTransparency = 1

                TweenService:Create(SliderFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(SliderLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(SliderBar, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(SliderFill, TweenInfo, {BackgroundTransparency = 0}):Play()

                local dragging = false
                local value = default

                SliderBar.InputBegan:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = true
                    end
                end)

                UserInputService.InputChanged:Connect(function(input)
                    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                        local mouse = UserInputService:GetMouseLocation()
                        local relativeX = math.clamp((mouse.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                        value = math.floor(min + relativeX * (max - min))
                        TweenService:Create(SliderFill, TweenInfo.new(0.1), {Size = UDim2.new(relativeX, 0, 1, 0)}):Play()
                        SliderLabel.Text = sliderText .. ": " .. value
                        callback(value)
                    end
                end)

                UserInputService.InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        dragging = false
                    end
                end)

                elementY = elementY + 60

                return {Slider = SliderBar, Set = function(val) value = val; local rel = (val - min) / (max - min); TweenService:Create(SliderFill, TweenInfo, {Size = UDim2.new(rel, 0, 1, 0)}):Play(); SliderLabel.Text = sliderText .. ": " .. val; callback(val) end}
            end

            function section:AddDropdown(options)
                options = options or {}
                local dropdownText = options.Title or "Dropdown"
                local values = options.Values or {}
                local default = options.Default or values[1]
                local callback = options.Callback or function() end

                local DropdownFrame = Instance.new("Frame")
                DropdownFrame.Name = "Dropdown"
                DropdownFrame.Parent = TabContentFrame
                DropdownFrame.BackgroundColor3 = CurrentTheme.Secondary
                DropdownFrame.BorderSizePixel = 0
                DropdownFrame.Size = UDim2.new(1, -20, 0, 30)
                DropdownFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                DropdownFrame.BackgroundTransparency = 1

                local DropdownLabel = Instance.new("TextLabel")
                DropdownLabel.Name = "Label"
                DropdownLabel.Parent = DropdownFrame
                DropdownLabel.BackgroundTransparency = 1
                DropdownLabel.Position = UDim2.new(0, 10, 0, 0)
                DropdownLabel.Size = UDim2.new(1, -100, 1, 0)
                DropdownLabel.Font = Enum.Font.SourceSans
                DropdownLabel.Text = dropdownText
                DropdownLabel.TextColor3 = CurrentTheme.Text
                DropdownLabel.TextSize = 14
                DropdownLabel.TextXAlignment = Enum.TextXAlignment.Left
                DropdownLabel.TextTransparency = 1

                local DropdownButton = Instance.new("TextButton")
                DropdownButton.Name = "Button"
                DropdownButton.Parent = DropdownFrame
                DropdownButton.BackgroundColor3 = CurrentTheme.Accent
                DropdownButton.BorderSizePixel = 0
                DropdownButton.Position = UDim2.new(1, -80, 0, 0)
                DropdownButton.Size = UDim2.new(0, 80, 1, 0)
                DropdownButton.Font = Enum.Font.SourceSans
                DropdownButton.Text = default or "Select"
                DropdownButton.TextColor3 = CurrentTheme.Text
                DropdownButton.TextSize = 14
                DropdownButton.BackgroundTransparency = 1

                local DropdownList = Instance.new("Frame")
                DropdownList.Name = "List"
                DropdownList.Parent = DropdownFrame
                DropdownList.BackgroundColor3 = CurrentTheme.Secondary
                DropdownList.BorderSizePixel = 0
                DropdownList.Position = UDim2.new(0, 0, 1, 0)
                DropdownList.Size = UDim2.new(1, 0, 0, 0)
                DropdownList.Visible = false
                DropdownList.BackgroundTransparency = 1
                DropdownList.ClipsDescendants = true

                for i, val in ipairs(values) do
                    local ListItem = Instance.new("TextButton")
                    ListItem.Name = val
                    ListItem.Parent = DropdownList
                    ListItem.BackgroundTransparency = 1
                    ListItem.Position = UDim2.new(0, 0, 0, (i-1)*30)
                    ListItem.Size = UDim2.new(1, 0, 0, 30)
                    ListItem.Font = Enum.Font.SourceSans
                    ListItem.Text = val
                    ListItem.TextColor3 = CurrentTheme.Text
                    ListItem.TextSize = 14
                    ListItem.BackgroundTransparency = 1
                    ListItem.TextTransparency = 1

                    ListItem.MouseButton1Click:Connect(function()
                        DropdownButton.Text = val
                        callback(val)
                        TweenService:Create(DropdownList, TweenInfo, {Size = UDim2.new(1, 0, 0, 0)}):Play()
                        DropdownList.Visible = false
                    end)
                end

                TweenService:Create(DropdownFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(DropdownLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(DropdownButton, TweenInfo, {BackgroundTransparency = 0}):Play()

                addHover(DropdownButton, Color3.fromRGB(70, 70, 80))

                DropdownButton.MouseButton1Click:Connect(function()
                    if DropdownList.Visible then
                        TweenService:Create(DropdownList, TweenInfo, {Size = UDim2.new(1, 0, 0, 0)}):Play()
                        wait(0.3)
                        DropdownList.Visible = false
                    else
                        DropdownList.Visible = true
                        TweenService:Create(DropdownList, TweenInfo, {Size = UDim2.new(1, 0, 0, #values * 30), BackgroundTransparency = 0}):Play()
                        for i, item in ipairs(DropdownList:GetChildren()) do
                            if item:IsA("TextButton") then
                                spawn(function()
                                    wait((i-1)*0.05)
                                    TweenService:Create(item, TweenInfo, {BackgroundTransparency = 0, TextTransparency = 0}):Play()
                                end)
                            end
                        end
                    end
                end)

                elementY = elementY + 40 + (#values * 30)

                return {Button = DropdownButton, Refresh = function() end}
            end

            function section:AddColorpicker(options)
                options = options or {}
                local colorText = options.Title or "Colorpicker"
                local default = options.Default or Color3.fromRGB(255, 0, 0)
                local callback = options.Callback or function() end

                local ColorFrame = Instance.new("Frame")
                ColorFrame.Name = "Colorpicker"
                ColorFrame.Parent = TabContentFrame
                ColorFrame.BackgroundColor3 = CurrentTheme.Secondary
                ColorFrame.BorderSizePixel = 0
                ColorFrame.Size = UDim2.new(1, -20, 0, 30)
                ColorFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                ColorFrame.BackgroundTransparency = 1

                local ColorLabel = Instance.new("TextLabel")
                ColorLabel.Parent = ColorFrame
                ColorLabel.BackgroundTransparency = 1
                ColorLabel.Size = UDim2.new(1, -40, 1, 0)
                ColorLabel.Font = Enum.Font.SourceSans
                ColorLabel.Text = colorText
                ColorLabel.TextColor3 = CurrentTheme.Text
                ColorLabel.TextSize = 14
                ColorLabel.TextXAlignment = Enum.TextXAlignment.Left
                ColorLabel.TextTransparency = 1

                local ColorButton = Instance.new("TextButton")
                ColorButton.Parent = ColorFrame
                ColorButton.BackgroundColor3 = default
                ColorButton.BorderSizePixel = 0
                ColorButton.Position = UDim2.new(1, -30, 0, 0)
                ColorButton.Size = UDim2.new(0, 20, 1, 0)
                ColorButton.Text = ""
                ColorButton.BackgroundTransparency = 1

                TweenService:Create(ColorFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(ColorLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(ColorButton, TweenInfo, {BackgroundTransparency = 0}):Play()

                addHover(ColorButton, Color3.fromRGB(255, 255, 255))

                ColorButton.MouseButton1Click:Connect(function()
                    TweenService:Create(ColorButton, TweenInfo.new(0.1), {Size = UDim2.new(0, 18, 1, 0)}):Play()
                    wait(0.1)
                    default = Color3.fromRGB(math.random(0,255), math.random(0,255), math.random(0,255))
                    TweenService:Create(ColorButton, TweenInfo, {BackgroundColor3 = default, Size = UDim2.new(0, 20, 1, 0)}):Play()
                    callback(default)
                end)

                elementY = elementY + 40

                return {Button = ColorButton, Set = function(color) default = color; TweenService:Create(ColorButton, TweenInfo, {BackgroundColor3 = color}):Play(); callback(color) end}
            end

            function section:AddKeybind(options)
                options = options or {}
                local keyText = options.Title or "Keybind"
                local default = options.Default or Enum.KeyCode.Q
                local callback = options.Callback or function() end

                local KeyFrame = Instance.new("Frame")
                KeyFrame.Name = "Keybind"
                KeyFrame.Parent = TabContentFrame
                KeyFrame.BackgroundColor3 = CurrentTheme.Secondary
                KeyFrame.BorderSizePixel = 0
                KeyFrame.Size = UDim2.new(1, -20, 0, 30)
                KeyFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                KeyFrame.BackgroundTransparency = 1

                local KeyLabel = Instance.new("TextLabel")
                KeyLabel.Parent = KeyFrame
                KeyLabel.BackgroundTransparency = 1
                KeyLabel.Position = UDim2.new(0, 10, 0, 0)
                KeyLabel.Size = UDim2.new(1, -100, 1, 0)
                KeyLabel.Font = Enum.Font.SourceSans
                KeyLabel.Text = keyText
                KeyLabel.TextColor3 = CurrentTheme.Text
                KeyLabel.TextSize = 14
                KeyLabel.TextXAlignment = Enum.TextXAlignment.Left
                KeyLabel.TextTransparency = 1

                local KeyButton = Instance.new("TextButton")
                KeyButton.Parent = KeyFrame
                KeyButton.BackgroundColor3 = CurrentTheme.Accent
                KeyButton.BorderSizePixel = 0
                KeyButton.Position = UDim2.new(1, -30, 0, 0)
                KeyButton.Size = UDim2.new(0, 20, 1, 0)
                KeyButton.Font = Enum.Font.SourceSansBold
                KeyButton.Text = default.Name
                KeyButton.TextColor3 = CurrentTheme.Text
                KeyButton.TextSize = 10
                KeyButton.BackgroundTransparency = 1

                TweenService:Create(KeyFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(KeyLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(KeyButton, TweenInfo, {BackgroundTransparency = 0}):Play()

                addHover(KeyButton, Color3.fromRGB(70, 70, 80))

                local binding = false
                KeyButton.MouseButton1Click:Connect(function()
                    binding = true
                    TweenService:Create(KeyButton, TweenInfo.new(0.5, Enum.EasingStyle.Bounce), {Size = UDim2.new(0, 25, 1, 0)}):Play()
                    wait(0.2)
                    TweenService:Create(KeyButton, TweenInfo, {Size = UDim2.new(0, 20, 1, 0)}):Play()
                    KeyButton.Text = "..."
                end)

                UserInputService.InputBegan:Connect(function(input)
                    if binding and input.KeyCode ~= Enum.KeyCode.Unknown then
                        default = input.KeyCode
                        KeyButton.Text = default.Name
                        binding = false
                        callback(default)
                    end
                end)

                elementY = elementY + 40

                return {Button = KeyButton, Set = function(key) default = key; TweenService:Create(KeyButton, TweenInfo, {Text = key.Name}):Play(); callback(key) end}
            end

            function section:AddParagraph(options)
                options = options or {}
                local paraTitle = options.Title or ""
                local paraDesc = options.Desc or ""

                local ParaFrame = Instance.new("Frame")
                ParaFrame.Name = "Paragraph"
                ParaFrame.Parent = TabContentFrame
                ParaFrame.BackgroundColor3 = CurrentTheme.Secondary
                ParaFrame.BorderSizePixel = 0
                ParaFrame.Size = UDim2.new(1, -20, 0, 60)
                ParaFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                ParaFrame.BackgroundTransparency = 1

                local ParaTitle = Instance.new("TextLabel")
                ParaTitle.Parent = ParaFrame
                ParaTitle.BackgroundTransparency = 1
                ParaTitle.Position = UDim2.new(0, 0, 0, 0)
                ParaTitle.Size = UDim2.new(1, 0, 0.5, 0)
                ParaTitle.Font = Enum.Font.SourceSansBold
                ParaTitle.Text = paraTitle
                ParaTitle.TextColor3 = CurrentTheme.Text
                ParaTitle.TextSize = 14
                ParaTitle.TextXAlignment = Enum.TextXAlignment.Left
                ParaTitle.TextTransparency = 1

                local ParaDesc = Instance.new("TextLabel")
                ParaDesc.Parent = ParaFrame
                ParaDesc.BackgroundTransparency = 1
                ParaDesc.Position = UDim2.new(0, 0, 0.5, 0)
                ParaDesc.Size = UDim2.new(1, 0, 0.5, 0)
                ParaDesc.Font = Enum.Font.SourceSans
                ParaDesc.Text = paraDesc
                ParaDesc.TextColor3 = CurrentTheme.Text
                ParaDesc.TextSize = 12
                ParaDesc.TextXAlignment = Enum.TextXAlignment.Left
                ParaDesc.TextWrapped = true
                ParaDesc.TextTransparency = 1

                TweenService:Create(ParaFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(ParaTitle, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(ParaDesc, TweenInfo, {TextTransparency = 0}):Play()

                elementY = elementY + 70

                return ParaFrame
            end

            function section:AddInput(options)
                options = options or {}
                local inputText = options.Title or "Input"
                local default = options.Default or ""
                local callback = options.Callback or function() end

                local InputFrame = Instance.new("Frame")
                InputFrame.Name = "Input"
                InputFrame.Parent = TabContentFrame
                InputFrame.BackgroundColor3 = CurrentTheme.Secondary
                InputFrame.BorderSizePixel = 0
                InputFrame.Size = UDim2.new(1, -20, 0, 30)
                InputFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                InputFrame.BackgroundTransparency = 1

                local InputLabel = Instance.new("TextLabel")
                InputLabel.Parent = InputFrame
                InputLabel.BackgroundTransparency = 1
                InputLabel.Position = UDim2.new(0, 10, 0, 0)
                InputLabel.Size = UDim2.new(0, 100, 1, 0)
                InputLabel.Font = Enum.Font.SourceSans
                InputLabel.Text = inputText
                InputLabel.TextColor3 = CurrentTheme.Text
                InputLabel.TextSize = 14
                InputLabel.TextXAlignment = Enum.TextXAlignment.Left
                InputLabel.TextTransparency = 1

                local InputBox = Instance.new("TextBox")
                InputBox.Parent = InputFrame
                InputBox.BackgroundColor3 = CurrentTheme.Accent
                InputBox.BorderSizePixel = 0
                InputBox.Position = UDim2.new(0, 110, 0, 0)
                InputBox.Size = UDim2.new(1, -120, 1, 0)
                InputBox.Font = Enum.Font.SourceSans
                InputBox.Text = default
                InputBox.TextColor3 = CurrentTheme.Text
                InputBox.TextSize = 14
                InputBox.TextXAlignment = Enum.TextXAlignment.Left
                InputBox.BackgroundTransparency = 1
                InputBox.TextTransparency = 1

                TweenService:Create(InputFrame, TweenInfo, {BackgroundTransparency = 0}):Play()
                TweenService:Create(InputLabel, TweenInfo, {TextTransparency = 0}):Play()
                TweenService:Create(InputBox, TweenInfo, {BackgroundTransparency = 0, TextTransparency = 0}):Play()

                addHover(InputBox, Color3.fromRGB(70, 70, 80))

                InputBox.Focused:Connect(function()
                    TweenService:Create(InputBox, TweenInfo, {BackgroundColor3 = CurrentTheme.Background}):Play()
                end)

                InputBox.FocusLost:Connect(function()
                    TweenService:Create(InputBox, TweenInfo, {BackgroundColor3 = CurrentTheme.Accent}):Play()
                    callback(InputBox.Text)
                end)

                elementY = elementY + 40

                return {Box = InputBox, Set = function(text) InputBox.Text = text end}
            end

            function section:AddSeparator()
                local SepFrame = Instance.new("Frame")
                SepFrame.Name = "Separator"
                SepFrame.Parent = TabContentFrame
                SepFrame.BackgroundColor3 = CurrentTheme.Accent
                SepFrame.BorderSizePixel = 0
                SepFrame.Size = UDim2.new(0, 0, 0, 1)
                SepFrame.Position = UDim2.new(0, 10, 0, sectionY + elementY)
                SepFrame.BackgroundTransparency = 1

                TweenService:Create(SepFrame, TweenInfo, {Size = UDim2.new(1, -20, 0, 1), BackgroundTransparency = 0}):Play()

                elementY = elementY + 10

                return SepFrame
            end

            TabContentFrame.CanvasSize = UDim2.new(0, 0, 0, sectionY + elementY)

            return section
        end

        return tab
    end

    function window:SetTheme(newTheme)
        CurrentTheme = Themes[newTheme] or CurrentTheme
        TweenService:Create(MainFrame, TweenInfo, {BackgroundColor3 = CurrentTheme.Background}):Play()
        TweenService:Create(TitleBar, TweenInfo, {BackgroundColor3 = CurrentTheme.Accent}):Play()
        TweenService:Create(TitleLabel, TweenInfo, {TextColor3 = CurrentTheme.Text}):Play()
    end

    return window
end

return HuangUI
