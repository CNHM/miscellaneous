-- MobileUILib.lua
-- 一个简单的 Roblox 手机版 UI 库，优化自适应屏幕。

local MobileUILib = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- 主题定义
local Themes = {
    Light = {
        Background = Color3.fromRGB(255, 255, 255),
        Frame = Color3.fromRGB(245, 245, 245),
        Text = Color3.fromRGB(0, 0, 0),
        Accent = Color3.fromRGB(0, 122, 255),
        Border = Color3.fromRGB(200, 200, 200)
    },
    Dark = {
        Background = Color3.fromRGB(30, 30, 30),
        Frame = Color3.fromRGB(50, 50, 50),
        Text = Color3.fromRGB(255, 255, 255),
        Accent = Color3.fromRGB(100, 200, 255),
        Border = Color3.fromRGB(70, 70, 70)
    }
}

-- 创建主窗口
function MobileUILib:CreateWindow(title, theme)
    theme = theme or "Dark"
    local themeData = Themes[theme]
    
    -- 创建 ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "MobileUI"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.IgnoreGuiInset = true  -- 忽略顶部栏，优化移动
    
    -- 主 Frame（窗口）
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.fromScale(0.9, 0.8)  -- 移动自适应：90% 宽度，80% 高度
    mainFrame.Position = UDim2.fromScale(0.05, 0.1)  -- 居中偏移
    mainFrame.BackgroundColor3 = themeData.Background
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- 圆角
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.fromScale(1, 0.08)
    titleBar.Position = UDim2.fromScale(0, 0)
    titleBar.BackgroundColor3 = themeData.Accent
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBar
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.fromScale(1, 1)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = themeData.Text
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar
    
    -- 滚动内容区域
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Name = "Content"
    scrollFrame.Size = UDim2.fromScale(1, 0.92)
    scrollFrame.Position = UDim2.fromScale(0, 0.08)
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 6  -- 移动端友好滚动条
    scrollFrame.CanvasSize = UDim2.fromScale(0, 0)
    scrollFrame.Parent = mainFrame
    
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 8)
    listLayout.Parent = scrollFrame
    
    -- 拖拽支持（移动端触摸拖拽）
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    
    local window = {
        ScreenGui = screenGui,
        MainFrame = mainFrame,
        ScrollFrame = scrollFrame,
        Theme = themeData,
        UpdateCanvas = function()
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 20)
        end
    }
    
    listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(window.UpdateCanvas)
    
    return window
end

-- 添加按钮
function MobileUILib:AddButton(window, text, callback)
    local button = Instance.new("TextButton")
    button.Name = "Button"
    button.Size = UDim2.fromScale(1, 0.06)
    button.BackgroundColor3 = window.Theme.Frame
    button.Text = text
    button.TextColor3 = window.Theme.Text
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.BorderSizePixel = 0
    button.Parent = window.ScrollFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = button
    
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    button.MouseButton1Click:Connect(function()
        local tween = TweenService:Create(button, tweenInfo, {BackgroundColor3 = window.Theme.Accent})
        tween:Play()
        tween.Completed:Connect(function()
            TweenService:Create(button, tweenInfo, {BackgroundColor3 = window.Theme.Frame}):Play()
        end)
        callback()
    end)
    
    button.TouchTap:Connect(callback)  -- 移动端触摸支持
    
    window.UpdateCanvas()
    return button
end

-- 添加滑块（简单数值滑块）
function MobileUILib:AddSlider(window, text, min, max, default, callback)
    min = min or 0
    max = max or 100
    default = default or min
    
    local container = Instance.new("Frame")
    container.Name = "SliderContainer"
    container.Size = UDim2.fromScale(1, 0.08)
    container.BackgroundTransparency = 1
    container.Parent = window.ScrollFrame
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.fromScale(1, 0.4)
    label.BackgroundTransparency = 1
    label.Text = text .. ": " .. default
    label.TextColor3 = window.Theme.Text
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.Parent = container
    
    local sliderFrame = Instance.new("Frame")
    sliderFrame.Name = "Slider"
    sliderFrame.Size = UDim2.fromScale(1, 0.3)
    sliderFrame.Position = UDim2.fromScale(0, 0.4)
    sliderFrame.BackgroundColor3 = window.Theme.Border
    sliderFrame.BorderSizePixel = 0
    sliderFrame.Parent = container
    
    local sliderCorner = Instance.new("UICorner")
    sliderCorner.CornerRadius = UDim.new(0, 4)
    sliderCorner.Parent = sliderFrame
    
    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.fromScale((default - min) / (max - min), 1)
    fill.BackgroundColor3 = window.Theme.Accent
    fill.BorderSizePixel = 0
    fill.Parent = sliderFrame
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 4)
    fillCorner.Parent = fill
    
    local draggingSlider = false
    sliderFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            draggingSlider = true
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if draggingSlider and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local relativeX = math.clamp((input.Position.X - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
            local value = math.floor(min + relativeX * (max - min))
            fill.Size = UDim2.fromScale(relativeX, 1)
            label.Text = text .. ": " .. value
            callback(value)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            draggingSlider = false
        end
    end)
    
    window.UpdateCanvas()
    return container
end

-- 添加切换按钮（Toggle）
function MobileUILib:AddToggle(window, text, default, callback)
    default = default or false
    
    local container = Instance.new("Frame")
    container.Name = "ToggleContainer"
    container.Size = UDim2.fromScale(1, 0.06)
    container.BackgroundTransparency = 1
    container.Parent = window.ScrollFrame
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.fromScale(0.8, 1)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = window.Theme.Text
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = container
    
    local toggleButton = Instance.new("TextButton")
    toggleButton.Name = "Toggle"
    toggleButton.Size = UDim2.fromScale(0.15, 0.6)
    toggleButton.Position = UDim2.fromScale(0.82, 0.2)
    toggleButton.BackgroundColor3 = default and window.Theme.Accent or window.Theme.Border
    toggleButton.Text = ""
    toggleButton.BorderSizePixel = 0
    toggleButton.Parent = container
    
    local toggleCorner = Instance.new("UICorner")
    toggleCorner.CornerRadius = UDim.new(0, 20)  -- 圆形切换
    toggleCorner.Parent = toggleButton
    
    local function updateToggle(value)
        toggleButton.BackgroundColor3 = value and window.Theme.Accent or window.Theme.Border
        callback(value)
    end
    
    toggleButton.MouseButton1Click:Connect(function()
        default = not default
        updateToggle(default)
    end)
    
    toggleButton.TouchTap:Connect(function()
        default = not default
        updateToggle(default)
    end)
    
    window.UpdateCanvas()
    return container
end

-- 添加输入框
function MobileUILib:AddInput(window, text, placeholder, callback)
    local container = Instance.new("Frame")
    container.Name = "InputContainer"
    container.Size = UDim2.fromScale(1, 0.08)
    container.BackgroundTransparency = 1
    container.Parent = window.ScrollFrame
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.fromScale(1, 0.4)
    label.BackgroundTransparency = 1
    label.Text = text
    label.TextColor3 = window.Theme.Text
    label.TextScaled = true
    label.Font = Enum.Font.Gotham
    label.Parent = container
    
    local inputBox = Instance.new("TextBox")
    inputBox.Name = "Input"
    inputBox.Size = UDim2.fromScale(1, 0.4)
    inputBox.Position = UDim2.fromScale(0, 0.4)
    inputBox.BackgroundColor3 = window.Theme.Frame
    inputBox.Text = placeholder or ""
    inputBox.PlaceholderText = placeholder or "输入文本..."
    inputBox.TextColor3 = window.Theme.Text
    inputBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
    inputBox.TextScaled = true
    inputBox.Font = Enum.Font.Gotham
    inputBox.BorderSizePixel = 0
    inputBox.Parent = container
    
    local inputCorner = Instance.new("UICorner")
    inputCorner.CornerRadius = UDim.new(0, 6)
    inputCorner.Parent = inputBox
    
    inputBox.FocusLost:Connect(function(enterPressed)
        callback(inputBox.Text)
        if enterPressed then
            inputBox.Text = ""  -- 清空输入
        end
    end)
    
    window.UpdateCanvas()
    return container
end

-- 切换主题
function MobileUILib:SwitchTheme(window, newTheme)
    local themeData = Themes[newTheme]
    window.Theme = themeData
    -- 更新主 Frame 颜色
    window.MainFrame.BackgroundColor3 = themeData.Background
    -- 这里可以扩展更新所有子元素颜色
    print("主题切换到: " .. newTheme)
end

-- 销毁窗口
function MobileUILib:Destroy(window)
    window.ScreenGui:Destroy()
end

return MobileUILib
