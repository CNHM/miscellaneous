-- 自定义 Roblox UI 库
-- 功能：支持窗口、选项卡、按钮、开关，带玻璃质感和流畅过渡动画
-- 作者：Grok（基于用户需求生成）
-- 版本：2.0

local CustomUILibrary = {}

-- 服务引用
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- 工具函数：创建圆角
local function applyCorner(instance, radius)
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, radius or 8)
    corner.Parent = instance
end

-- 工具函数：创建玻璃质感模糊效果
local function applyBlur(parent)
    local blur = Instance.new("UIBlurEffect")
    blur.Size = 24
    blur.Parent = parent
end

-- 主 UI 库：创建窗口
function CustomUILibrary:CreateWindow(config)
    local window = {}
    window.Title = config.Title or "自定义界面"
    window.SubTitle = config.SubTitle or "欢迎使用"
    window.Size = config.Size or UDim2.new(0, 600, 0, 400)
    window.Theme = config.Theme or "Dark"

    -- 创建主 ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CustomUILibrary"
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false

    -- 主窗口框架
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = window.Size
    mainFrame.Position = UDim2.new(0.5, -window.Size.X.Offset / 2, 0.5, -window.Size.Y.Offset / 2)
    mainFrame.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(20, 20, 20) or Color3.fromRGB(220, 220, 220)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    applyCorner(mainFrame, 12)
    applyBlur(mainFrame)
    mainFrame.Parent = screenGui

    -- 窗口出现动画
    mainFrame.Position = UDim2.new(0.5, -window.Size.X.Offset / 2, 0.5, 100)
    TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
        Position = UDim2.new(0.5, -window.Size.X.Offset / 2, 0.5, -window.Size.Y.Offset / 2)
    }):Play()

    -- 标题栏
    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(15, 15, 15) or Color3.fromRGB(200, 200, 200)
    titleBar.BackgroundTransparency = 0.2
    applyCorner(titleBar, 8)
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.Text = window.Title .. " - " .. window.SubTitle
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextSize = 16
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = titleBar

    -- 选项卡容器
    local tabContainer = Instance.new("Frame")
    tabContainer.Size = UDim2.new(0, 160, 1, -40)
    tabContainer.Position = UDim2.new(0, 0, 0, 40)
    tabContainer.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(25, 25, 25) or Color3.fromRGB(210, 210, 210)
    tabContainer.BackgroundTransparency = 0.3
    applyCorner(tabContainer, 8)
    tabContainer.Parent = mainFrame

    local tabListLayout = Instance.new("UIListLayout")
    tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabListLayout.Padding = UDim.new(0, 5)
    tabListLayout.Parent = tabContainer

    -- 内容区域
    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, -160, 1, -40)
    contentFrame.Position = UDim2.new(0, 160, 0, 40)
    contentFrame.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(30, 30, 30) or Color3.fromRGB(230, 230, 230)
    contentFrame.BackgroundTransparency = 0.3
    applyCorner(contentFrame, 8)
    contentFrame.Parent = mainFrame

    -- 存储选项卡
    window.Tabs = {}
    window.CurrentTab = nil

    -- 创建选项卡方法
    function window:Tab(tabConfig)
        local tab = {}
        tab.Title = tabConfig.Title or "选项卡"
        tab.Icon = tabConfig.Icon or ""
        tab.Locked = tabConfig.Locked or false
        tab.Default = tabConfig.Default or false

        -- 选项卡按钮
        local tabButton = Instance.new("TextButton")
        tabButton.Size = UDim2.new(1, -10, 0, 45)
        tabButton.Position = UDim2.new(0, 5, 0, 0)
        tabButton.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(40, 40, 40) or Color3.fromRGB(180, 180, 180)
        tabButton.BackgroundTransparency = 0.4
        tabButton.Text = tab.Icon ~= "" and tab.Icon .. " " .. tab.Title or tab.Title
        tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        tabButton.TextSize = 14
        tabButton.Font = Enum.Font.Gotham
        applyCorner(tabButton, 6)
        tabButton.Parent = tabContainer

        -- 选项卡内容框架
        local tabContent = Instance.new("Frame")
        tabContent.Size = UDim2.new(1, 0, 1, 0)
        tabContent.BackgroundTransparency = 1
        tabContent.Visible = tab.Default
        tabContent.Parent = contentFrame

        local contentListLayout = Instance.new("UIListLayout")
        contentListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        contentListLayout.Padding = UDim.new(0, 8)
        contentListLayout.Parent = tabContent

        -- 选项卡切换动画
        tabButton.MouseButton1Click:Connect(function()
            if tab.Locked then
                CustomUILibrary:Notify({
                    Title = "错误",
                    Content = "此选项卡已锁定！",
                    Duration = 3
                })
                return
            end
            for _, otherTab in pairs(window.Tabs) do
                otherTab.Content.Visible = false
                TweenService:Create(otherTab.Button, TweenInfo.new(0.3), {BackgroundTransparency = 0.4}):Play()
            end
            tabContent.Visible = true
            TweenService:Create(tabButton, TweenInfo.new(0.3, Enum.EasingStyle.Sine), {BackgroundTransparency = 0.2}):Play()
            TweenService:Create(tabContent, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundTransparency = 0}):Play()
            window.CurrentTab = tab
        end)

        -- 按钮组件
        function tab:Button(buttonConfig)
            local button = {}
            button.Title = buttonConfig.Title or "按钮"
            button.Desc = buttonConfig.Desc or ""
            button.Icon = buttonConfig.Icon or ""
            button.Locked = buttonConfig.Locked or false
            button.Callback = buttonConfig.Callback or function() end

            local buttonFrame = Instance.new("Frame")
            buttonFrame.Size = UDim2.new(1, -20, 0, 60)
            buttonFrame.Position = UDim2.new(0, 10, 0, 0)
            buttonFrame.BackgroundTransparency = 1
            buttonFrame.Parent = tabContent

            local buttonElement = Instance.new("TextButton")
            buttonElement.Size = UDim2.new(1, 0, 0, 40)
            buttonElement.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(50, 50, 50) or Color3.fromRGB(170, 170, 170)
            buttonElement.BackgroundTransparency = 0.5
            buttonElement.Text = button.Icon ~= "" and button.Icon .. " " .. button.Title or button.Title
            buttonElement.TextColor3 = Color3.fromRGB(255, 255, 255)
            buttonElement.TextSize = 14
            buttonElement.Font = Enum.Font.Gotham
            applyCorner(buttonElement, 6)
            applyBlur(buttonElement)
            buttonElement.Parent = buttonFrame

            local descLabel = Instance.new("TextLabel")
            descLabel.Size = UDim2.new(1, 0, 0, 15)
            descLabel.Position = UDim2.new(0, 0, 0, 45)
            descLabel.BackgroundTransparency = 1
            descLabel.Text = button.Desc
            descLabel.TextColor3 = window.Theme == "Dark" and Color3.fromRGB(180, 180, 180) or Color3.fromRGB(100, 100, 100)
            descLabel.TextSize = 12
            descLabel.Font = Enum.Font.Gotham
            descLabel.Parent = buttonFrame

            -- 按钮点击动画
            buttonElement.MouseButton1Click:Connect(function()
                if button.Locked then
                    CustomUILibrary:Notify({
                        Title = "错误",
                        Content = "此按钮已锁定！",
                        Duration = 3
                    })
                    return
                end
                local tween = TweenService:Create(buttonElement, TweenInfo.new(0.2, Enum.EasingStyle.Sine), {BackgroundColor3 = Color3.fromRGB(80, 80, 80), BackgroundTransparency = 0.3})
                tween:Play()
                tween.Completed:Connect(function()
                    TweenService:Create(buttonElement, TweenInfo.new(0.2, Enum.EasingStyle.Sine), {BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(50, 50, 50) or Color3.fromRGB(170, 170, 170), BackgroundTransparency = 0.5}):Play()
                end)
                button.Callback()
            end)

            return button
        end

        -- 开关组件（新添加）
        function tab:Toggle(toggleConfig)
            local toggle = {}
            toggle.Title = toggleConfig.Title or "开关"
            toggle.Desc = toggleConfig.Desc or ""
            toggle.Icon = toggleConfig.Icon or ""
            toggle.Locked = toggleConfig.Locked or false
            toggle.State = toggleConfig.Default or false
            toggle.Callback = toggleConfig.Callback or function(state) end

            local toggleFrame = Instance.new("Frame")
            toggleFrame.Size = UDim2.new(1, -20, 0, 60)
            toggleFrame.Position = UDim2.new(0, 10, 0, 0)
            toggleFrame.BackgroundTransparency = 1
            toggleFrame.Parent = tabContent

            local toggleButton = Instance.new("TextButton")
            toggleButton.Size = UDim2.new(1, 0, 0, 40)
            toggleButton.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(50, 50, 50) or Color3.fromRGB(170, 170, 170)
            toggleButton.BackgroundTransparency = 0.5
            toggleButton.Text = toggle.Icon ~= "" and toggle.Icon .. " " .. toggle.Title or toggle.Title
            toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            toggleButton.TextSize = 14
            toggleButton.Font = Enum.Font.Gotham
            applyCorner(toggleButton, 6)
            applyBlur(toggleButton)
            toggleButton.Parent = toggleFrame

            local toggleIndicator = Instance.new("Frame")
            toggleIndicator.Size = UDim2.new(0, 30, 0, 20)
            toggleIndicator.Position = UDim2.new(1, -40, 0.5, -10)
            toggleIndicator.BackgroundColor3 = toggle.State and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
            applyCorner(toggleIndicator, 10)
            toggleIndicator.Parent = toggleButton

            local descLabel = Instance.new("TextLabel")
            descLabel.Size = UDim2.new(1, 0, 0, 15)
            descLabel.Position = UDim2.new(0, 0, 0, 45)
            descLabel.BackgroundTransparency = 1
            descLabel.Text = toggle.Desc
            descLabel.TextColor3 = window.Theme == "Dark" and Color3.fromRGB(180, 180, 180) or Color3.fromRGB(100, 100, 100)
            descLabel.TextSize = 12
            descLabel.Font = Enum.Font.Gotham
            descLabel.Parent = toggleFrame

            -- 开关切换动画
            toggleButton.MouseButton1Click:Connect(function()
                if toggle.Locked then
                    CustomUILibrary:Notify({
                        Title = "错误",
                        Content = "此开关已锁定！",
                        Duration = 3
                    })
                    return
                end
                toggle.State = not toggle.State
                TweenService:Create(toggleIndicator, TweenInfo.new(0.3, Enum.EasingStyle.Sine), {
                    BackgroundColor3 = toggle.State and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0),
                    Position = toggle.State and UDim2.new(1, -40, 0.5, -10) or UDim2.new(1, -70, 0.5, -10)
                }):Play()
                toggle.Callback(toggle.State)
            end)

            return toggle
        end

        tab.Button = tabButton
        tab.Content = tabContent
        table.insert(window.Tabs, tab)
        if tab.Default then
            window.CurrentTab = tab
            TweenService:Create(tabButton, TweenInfo.new(0.3), {BackgroundTransparency = 0.2}):Play()
        end
        return tab
    end

    -- 通知方法
    function CustomUILibrary:Notify(notifyConfig)
        local notifyFrame = Instance.new("Frame")
        notifyFrame.Size = UDim2.new(0, 250, 0, 80)
        notifyFrame.Position = UDim2.new(1, -260, 1, -90)
        notifyFrame.BackgroundColor3 = window.Theme == "Dark" and Color3.fromRGB(20, 20, 20) or Color3.fromRGB(220, 220, 220)
        notifyFrame.BackgroundTransparency = 0.2
        applyCorner(notifyFrame, 8)
        applyBlur(notifyFrame)
        notifyFrame.Parent = screenGui

        local notifyTitle = Instance.new("TextLabel")
        notifyTitle.Size = UDim2.new(1, -10, 0, 25)
        notifyTitle.Position = UDim2.new(0, 5, 0, 5)
        notifyTitle.Text = notifyConfig.Title or "通知"
        notifyTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
        notifyTitle.BackgroundTransparency = 1
        notifyTitle.TextSize = 16
        notifyTitle.Font = Enum.Font.GothamBold
        notifyTitle.Parent = notifyFrame

        local notifyContent = Instance.new("TextLabel")
        notifyContent.Size = UDim2.new(1, -10, 0, 45)
        notifyContent.Position = UDim2.new(0, 5, 0, 30)
        notifyContent.Text = notifyConfig.Content or ""
        notifyContent.TextColor3 = Color3.fromRGB(200, 200, 200)
        notifyContent.BackgroundTransparency = 1
        notifyContent.TextSize = 12
        notifyContent.Font = Enum.Font.Gotham
        notifyContent.TextWrapped = true
        notifyContent.Parent = notifyFrame

        -- 通知动画
        notifyFrame.Position = UDim2.new(1, 0, 1, -90)
        local tweenIn = TweenService:Create(notifyFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {Position = UDim2.new(1, -260, 1, -90)})
        tweenIn:Play()
        wait(notifyConfig.Duration or 3)
        local tweenOut = TweenService:Create(notifyFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad), {Position = UDim2.new(1, 0, 1, -90)})
        tweenOut:Play()
        tweenOut.Completed:Connect(function()
            notifyFrame:Destroy()
        end)
    end

    return window
end

return CustomUILibrary
