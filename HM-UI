local HUANGUI = {}
HUANGUI.__index = HUANGUI

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local TextService = game:GetService("TextService")

local defaultScale = 0.65

function HUANGUI:CreateWindow(options)
    options = options or {}
    local scale = options.scale or defaultScale
    local title = options.title or "HUANG UI"
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = options.name or "HUANGUI"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainWindow"
    mainFrame.Size = UDim2.new(0, options.width or 450, 0, options.height or 400)
    mainFrame.Position = UDim2.new(0.5, -(options.width or 450)/2, 0.5, -(options.height or 400)/2)
    mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    mainFrame.BackgroundTransparency = 0.1
    mainFrame.BorderSizePixel = 0
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.AnchorPoint = Vector2.new(0, 0)
    mainFrame.Parent = screenGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    titleBar.BackgroundTransparency = 0.05
    titleBar.BorderSizePixel = 0
    titleBar.Parent = mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel"
    titleLabel.Size = UDim2.new(1, -80, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = math.floor(16 * scale)
    titleLabel.Parent = titleBar
    
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = "ButtonContainer"
    buttonContainer.Size = UDim2.new(0, 80, 1, 0)
    buttonContainer.Position = UDim2.new(1, -80, 0, 0)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Parent = titleBar
    
    local minButton = Instance.new("TextButton")
    minButton.Name = "MinButton"
    minButton.Size = UDim2.new(0, 26, 0, 26)
    minButton.Position = UDim2.new(0, 0, 0.5, -13)
    minButton.BackgroundColor3 = Color3.fromRGB(255, 200, 0)
    minButton.BackgroundTransparency = 0.7
    minButton.Text = "−"
    minButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    minButton.TextScaled = true
    minButton.Font = Enum.Font.SourceSansBold
    minButton.TextSize = math.floor(20 * scale)
    minButton.Parent = buttonContainer
    
    local minCorner = Instance.new("UICorner")
    minCorner.CornerRadius = UDim.new(0.5, 0)
    minCorner.Parent = minButton
    
    local maxButton = Instance.new("TextButton")
    maxButton.Name = "MaxButton"
    maxButton.Size = UDim2.new(0, 26, 0, 26)
    maxButton.Position = UDim2.new(0, 26, 0.5, -13)
    maxButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    maxButton.BackgroundTransparency = 0.7
    maxButton.Text = "□"
    maxButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    maxButton.TextScaled = true
    maxButton.Font = Enum.Font.SourceSansBold
    maxButton.TextSize = math.floor(20 * scale)
    maxButton.Parent = buttonContainer
    
    local maxCorner = Instance.new("UICorner")
    maxCorner.CornerRadius = UDim.new(0.5, 0)
    maxCorner.Parent = maxButton
    
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 26, 0, 26)
    closeButton.Position = UDim2.new(0, 52, 0.5, -13)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    closeButton.BackgroundTransparency = 0.7
    closeButton.Text = "×"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = math.floor(20 * scale)
    closeButton.Parent = buttonContainer
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0.5, 0)
    closeCorner.Parent = closeButton
    
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -20, 1, -50)
    contentFrame.Position = UDim2.new(0, 10, 0, 40)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame
    
    local tabFrame = Instance.new("Frame")
    tabFrame.Name = "TabFrame"
    tabFrame.Size = UDim2.new(0, 120, 1, 0)
    tabFrame.Position = UDim2.new(0, 0, 0, 0)
    tabFrame.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    tabFrame.BackgroundTransparency = 0.1
    tabFrame.BorderSizePixel = 0
    tabFrame.Parent = contentFrame
    
    local tabCorner = Instance.new("UICorner")
    tabCorner.CornerRadius = UDim.new(0, 4)
    tabCorner.Parent = tabFrame
    
    local tabListLayout = Instance.new("UIListLayout")
    tabListLayout.Parent = tabFrame
    tabListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    tabListLayout.Padding = UDim.new(0, 5)
    tabListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
        end
    end)
    
    titleBar.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    
    local isMinimized = false
    local isMaximized = false
    local originalSize = mainFrame.Size
    local originalPos = mainFrame.Position
    local originalAnchor = mainFrame.AnchorPoint
    
    minButton.MouseButton1Click:Connect(function()
        isMinimized = not isMinimized
        if isMinimized then
            contentFrame.Visible = false
            titleBar.Size = UDim2.new(1, 0, 0, 30)
            minButton.Text = "+"
            
            mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
            mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
            local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = UDim2.new(0, 80, 0, 30)})
            tween:Play()
        else
            local restoreTween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {Size = originalSize})
            restoreTween:Play()
            restoreTween.Completed:Connect(function()
                mainFrame.Position = originalPos
                mainFrame.AnchorPoint = originalAnchor
                contentFrame.Visible = true
                minButton.Text = "−"
            end)
        end
    end)
    
    maxButton.MouseButton1Click:Connect(function()
        isMaximized = not isMaximized
        if isMaximized then
            originalSize = mainFrame.Size
            originalPos = mainFrame.Position
            local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(1, 0, 1, 0), Position = UDim2.new(0, 0, 0, 0)})
            tween:Play()
        else
            local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = originalSize, Position = originalPos})
            tween:Play()
        end
    end)
    
    local confirmDialog = Instance.new("Frame")
    confirmDialog.Name = "ConfirmDialog"
    confirmDialog.Size = UDim2.new(0, 300, 0, 150)
    confirmDialog.Position = UDim2.new(0.5, -150, 0.5, -75)
    confirmDialog.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    confirmDialog.BackgroundTransparency = 1
    confirmDialog.BorderSizePixel = 0
    confirmDialog.Visible = false
    confirmDialog.Active = true
    confirmDialog.Draggable = true
    confirmDialog.Parent = screenGui
    
    local dialogCorner = Instance.new("UICorner")
    dialogCorner.CornerRadius = UDim.new(0, 8)
    dialogCorner.Parent = confirmDialog
    
    local dialogTitleBar = Instance.new("Frame")
    dialogTitleBar.Size = UDim2.new(1, 0, 0, 30)
    dialogTitleBar.Position = UDim2.new(0, 0, 0, 0)
    dialogTitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dialogTitleBar.BorderSizePixel = 0
    dialogTitleBar.Parent = confirmDialog
    
    local dialogTitleCorner = Instance.new("UICorner")
    dialogTitleCorner.CornerRadius = UDim.new(0, 8)
    dialogTitleCorner.Parent = dialogTitleBar
    
    local dialogTitle = Instance.new("TextLabel")
    dialogTitle.Name = "DialogTitle"
    dialogTitle.Size = UDim2.new(1, -10, 1, 0)
    dialogTitle.Position = UDim2.new(0, 5, 0, 0)
    dialogTitle.BackgroundTransparency = 1
    dialogTitle.Text = "确认关闭？"
    dialogTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    dialogTitle.TextScaled = true
    dialogTitle.Font = Enum.Font.SourceSansBold
    dialogTitle.TextSize = math.floor(16 * scale)
    dialogTitle.TextXAlignment = Enum.TextXAlignment.Left
    dialogTitle.Parent = dialogTitleBar
    
    local dialogMessage = Instance.new("TextLabel")
    dialogMessage.Name = "DialogMessage"
    dialogMessage.Size = UDim2.new(1, -20, 0, 50)
    dialogMessage.Position = UDim2.new(0, 10, 0, 40)
    dialogMessage.BackgroundTransparency = 1
    dialogMessage.Text = "此操作将关闭窗口，确认吗？"
    dialogMessage.TextColor3 = Color3.fromRGB(200, 200, 200)
    dialogMessage.TextScaled = true
    dialogMessage.Font = Enum.Font.SourceSans
    dialogMessage.TextSize = math.floor(14 * scale)
    dialogMessage.Parent = confirmDialog
    
    local dialogButtonContainer = Instance.new("Frame")
    dialogButtonContainer.Name = "DialogButtonContainer"
    dialogButtonContainer.Size = UDim2.new(1, -20, 0, 40)
    dialogButtonContainer.Position = UDim2.new(0, 10, 1, -40)
    dialogButtonContainer.BackgroundTransparency = 1
    dialogButtonContainer.Parent = confirmDialog
    
    local cancelButton = Instance.new("TextButton")
    cancelButton.Name = "CancelButton"
    cancelButton.Size = UDim2.new(0.5, -5, 1, 0)
    cancelButton.Position = UDim2.new(0, 0, 0, 0)
    cancelButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
    cancelButton.Text = "取消"
    cancelButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    cancelButton.TextScaled = true
    cancelButton.Font = Enum.Font.SourceSansBold
    cancelButton.TextSize = math.floor(14 * scale)
    cancelButton.Parent = dialogButtonContainer
    
    local cancelCorner = Instance.new("UICorner")
    cancelCorner.CornerRadius = UDim.new(0, 4)
    cancelCorner.Parent = cancelButton
    
    local confirmButton = Instance.new("TextButton")
    confirmButton.Name = "ConfirmButton"
    confirmButton.Size = UDim2.new(0.5, 0, 1, 0)
    confirmButton.Position = UDim2.new(0.5, -5, 0, 0)
    confirmButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    confirmButton.Text = "确认"
    confirmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    confirmButton.TextScaled = true
    confirmButton.Font = Enum.Font.SourceSansBold
    confirmButton.TextSize = math.floor(14 * scale)
    confirmButton.Parent = dialogButtonContainer
    
    local confirmCorner = Instance.new("UICorner")
    confirmCorner.CornerRadius = UDim.new(0, 4)
    confirmCorner.Parent = confirmButton
    
    local function showConfirmDialog()
        mainFrame.Active = false
        mainFrame.BackgroundTransparency = 0.5
        confirmDialog.Visible = true
        local fadeIn = TweenService:Create(confirmDialog, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundTransparency = 0})
        fadeIn:Play()
    end
    
    local function hideConfirmDialog()
        local fadeOut = TweenService:Create(confirmDialog, TweenInfo.new(0.3, Enum.EasingStyle.Quad), {BackgroundTransparency = 1})
        fadeOut:Play()
        fadeOut.Completed:Connect(function()
            confirmDialog.Visible = false
            mainFrame.Active = true
            mainFrame.BackgroundTransparency = 0.1
        end)
    end
    
    confirmButton.MouseButton1Click:Connect(function()
        hideConfirmDialog()
        mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
        mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0)})
        tween:Play()
        tween.Completed:Connect(function()
            screenGui:Destroy()
        end)
    end)
    
    cancelButton.MouseButton1Click:Connect(function()
        hideConfirmDialog()
    end)
    
    closeButton.MouseButton1Click:Connect(function()
        showConfirmDialog()
    end)
    
    local function animateButton(button, hoverColor, pressColor)
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        
        button.MouseEnter:Connect(function()
            TweenService:Create(button, tweenInfo, {BackgroundColor3 = hoverColor, Size = UDim2.new(0, 28, 0, 28)}):Play()
        end)
        
        button.MouseLeave:Connect(function()
            TweenService:Create(button, tweenInfo, {BackgroundColor3 = button:GetAttribute("OriginalColor") or button.BackgroundColor3, Size = UDim2.new(0, 26, 0, 26)}):Play()
        end)
        
        button.MouseButton1Down:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0, 24, 0, 24)}):Play()
        end)
        
        button.MouseButton1Up:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.1), {Size = UDim2.new(0, 26, 0, 26)}):Play()
        end)
        
        button:SetAttribute("OriginalColor", button.BackgroundColor3)
    end
    
    animateButton(minButton, Color3.fromRGB(255, 220, 0), Color3.fromRGB(255, 180, 0))
    animateButton(maxButton, Color3.fromRGB(0, 220, 0), Color3.fromRGB(0, 180, 0))
    animateButton(closeButton, Color3.fromRGB(220, 0, 0), Color3.fromRGB(180, 0, 0))
    
    local window = {
        screenGui = screenGui,
        mainFrame = mainFrame,
        contentFrame = contentFrame,
        tabFrame = tabFrame,
        tabListLayout = tabListLayout,
        scale = scale,
        addTab = function(self, tabName, tabButton, tabContent)
            tabButton.Size = UDim2.new(1, 0, 0, 40)
            tabButton.BackgroundTransparency = 1
            tabButton.Text = tabName
            tabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            tabButton.TextScaled = true
            tabButton.Font = Enum.Font.SourceSansBold
            tabButton.TextSize = math.floor(14 * self.scale)
            tabButton.Parent = self.tabFrame
            
            tabContent.Size = UDim2.new(1, -130, 1, 0)
            tabContent.Position = UDim2.new(0, 120, 0, 0)
            tabContent.BackgroundTransparency = 1
            tabContent.Visible = false
            tabContent.Parent = self.contentFrame
            
            local currentTab = "fetch"
            tabButton.MouseButton1Click:Connect(function()
                for _, child in ipairs(self.contentFrame:GetChildren()) do
                    if child:IsA("Frame") and child.Name:find("Frame") then
                        child.Visible = false
                    end
                end
                tabContent.Visible = true
                for _, btn in ipairs(self.tabFrame:GetChildren()) do
                    if btn:IsA("TextButton") then
                        btn.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
                    end
                end
                tabButton.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
                currentTab = tabName
            end)
            
            return tabContent
        end,
        createButton = function(parent, text, callback, position, size, color)
            local btn = Instance.new("TextButton")
            btn.Size = size or UDim2.new(1, 0, 0, 30)
            btn.Position = position or UDim2.new(0, 0, 0, 0)
            btn.BackgroundColor3 = color or Color3.fromRGB(0, 120, 215)
            btn.BackgroundTransparency = 0.15
            btn.Text = text
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.TextScaled = true
            btn.Font = Enum.Font.SourceSansBold
            btn.TextSize = math.floor(16 * self.scale)
            btn.Parent = parent
            
            local btnCorner = Instance.new("UICorner")
            btnCorner.CornerRadius = UDim.new(0, 4)
            btnCorner.Parent = btn
            
            animateButton(btn, Color3.fromRGB(0, 140, 235), Color3.fromRGB(0, 100, 200))
            
            btn.MouseButton1Click:Connect(callback)
            
            return btn
        end,
        createTextBox = function(parent, placeholder, multiline, position, size)
            local tb = Instance.new("TextBox")
            tb.Size = size or UDim2.new(1, 0, 0, 30)
            tb.Position = position or UDim2.new(0, 0, 0, 0)
            tb.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            tb.BackgroundTransparency = 0.2
            tb.PlaceholderText = placeholder
            tb.Text = ""
            tb.TextColor3 = Color3.fromRGB(255, 255, 255)
            tb.TextScaled = true
            tb.Font = Enum.Font.SourceSans
            tb.TextSize = math.floor(14 * self.scale)
            tb.MultiLine = multiline or false
            tb.ClearTextOnFocus = false
            tb.Parent = parent
            
            local tbCorner = Instance.new("UICorner")
            tbCorner.CornerRadius = UDim.new(0, 4)
            tbCorner.Parent = tb
            
            return tb
        end,
        createScrollingFrame = function(parent, canvasSize, position, size)
            local sf = Instance.new("ScrollingFrame")
            sf.Size = size or UDim2.new(1, 0, 0, 80)
            sf.Position = position or UDim2.new(0, 0, 0, 0)
            sf.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
            sf.BackgroundTransparency = 0.1
            sf.BorderSizePixel = 0
            sf.ScrollBarThickness = 0
            sf.CanvasSize = canvasSize or UDim2.new(0, 0, 0, 0)
            sf.Parent = parent
            
            local sfCorner = Instance.new("UICorner")
            sfCorner.CornerRadius = UDim.new(0, 4)
            sfCorner.Parent = sf
            
            return sf
        end,
        createTextLabel = function(parent, text, position, size, color)
            local tl = Instance.new("TextLabel")
            tl.Size = size or UDim2.new(1, 0, 0, 20)
            tl.Position = position or UDim2.new(0, 0, 0, 0)
            tl.BackgroundTransparency = 1
            tl.Text = text
            tl.TextColor3 = color or Color3.fromRGB(255, 255, 255)
            tl.TextScaled = true
            tl.Font = Enum.Font.SourceSans
            tl.TextSize = math.floor(14 * self.scale)
            tl.Parent = parent
            
            return tl
        end,
        updateCanvasSize = function(scrollingFrame, textLabel)
            if textLabel then
                textLabel.Size = UDim2.new(1, -10, 0, textLabel.TextBounds.Y + 10)
                scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, textLabel.TextBounds.Y + 10)
            end
        end,
        showNotification = function(self, text)
            local notificationFrame = Instance.new("Frame")
            local notificationText = Instance.new("TextLabel")
            
            notificationFrame.Name = "NotificationFrame"
            notificationFrame.Parent = self.screenGui
            notificationFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            notificationFrame.BorderSizePixel = 0
            notificationFrame.Position = UDim2.new(1, -220, 1, -60)
            notificationFrame.Size = UDim2.new(0, 200, 0, 40)
            notificationFrame.Visible = false
            
            local notificationCorner = Instance.new("UICorner")
            notificationCorner.CornerRadius = UDim.new(0, 5)
            notificationCorner.Parent = notificationFrame
            
            notificationText.Name = "NotificationText"
            notificationText.Parent = notificationFrame
            notificationText.BackgroundTransparency = 1
            notificationText.Size = UDim2.new(1, 0, 1, 0)
            notificationText.Font = Enum.Font.GothamSemibold
            notificationText.TextColor3 = Color3.fromRGB(255, 255, 255)
            notificationText.TextSize = math.floor(14 * self.scale)
            notificationText.Text = text or "Copied to clipboard!"
            
            notificationFrame.Visible = true
            task.wait(2)
            notificationFrame.Visible = false
            notificationFrame:Destroy()
        end
    }
    
    local openTween = TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back), {Size = UDim2.new(0, options.width or 450, 0, options.height or 400)})
    openTween:Play()
    
    return setmetatable(window, {__index = HUANGUI})
end

return HUANGUI
